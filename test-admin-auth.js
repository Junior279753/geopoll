const fetch = require('node-fetch');

// Configuration
const BASE_URL = 'http://localhost:3001';
const ADMIN_EMAIL = 'admin@geopoll.ci';
const ADMIN_PASSWORD = 'admin123'; // Mot de passe par d√©faut

async function testAdminAuth() {
    try {
        console.log('üîê === TEST D\'AUTHENTIFICATION ADMIN ===\n');
        
        // 1. Test de connexion admin
        console.log('1Ô∏è‚É£ Test de connexion admin...');
        const loginResponse = await fetch(`${BASE_URL}/api/auth/login`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                email: ADMIN_EMAIL,
                password: ADMIN_PASSWORD
            })
        });
        
        if (!loginResponse.ok) {
            const errorData = await loginResponse.json();
            console.log('‚ùå √âchec de la connexion:', errorData);
            return;
        }
        
        const loginData = await loginResponse.json();
        console.log('‚úÖ Connexion r√©ussie !');
        console.log('üë§ Utilisateur:', loginData.user.firstName, loginData.user.lastName);
        console.log('üõ°Ô∏è  Admin:', loginData.user.isAdmin ? 'Oui' : 'Non');
        console.log('üé´ Token re√ßu:', loginData.token ? 'Oui' : 'Non');
        
        const token = loginData.token;
        
        // 2. Test d'acc√®s au profil
        console.log('\n2Ô∏è‚É£ Test d\'acc√®s au profil...');
        const profileResponse = await fetch(`${BASE_URL}/api/auth/profile`, {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });
        
        if (profileResponse.ok) {
            const profileData = await profileResponse.json();
            console.log('‚úÖ Profil r√©cup√©r√© avec succ√®s');
            console.log('üë§ Nom:', profileData.user.firstName, profileData.user.lastName);
            console.log('üìß Email:', profileData.user.email);
            console.log('üõ°Ô∏è  Admin:', profileData.user.isAdmin ? 'Oui' : 'Non');
        } else {
            console.log('‚ùå √âchec r√©cup√©ration profil:', await profileResponse.json());
        }
        
        // 3. Test d'acc√®s aux stats admin
        console.log('\n3Ô∏è‚É£ Test d\'acc√®s aux statistiques admin...');
        const statsResponse = await fetch(`${BASE_URL}/api/admin/stats`, {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });
        
        if (statsResponse.ok) {
            const statsData = await statsResponse.json();
            console.log('‚úÖ Statistiques admin r√©cup√©r√©es avec succ√®s');
            console.log('üìä Donn√©es:', Object.keys(statsData));
        } else {
            const errorData = await statsResponse.json();
            console.log('‚ùå √âchec acc√®s stats admin:', statsResponse.status, errorData);
        }
        
        // 4. Test d'acc√®s aux utilisateurs admin
        console.log('\n4Ô∏è‚É£ Test d\'acc√®s aux utilisateurs admin...');
        const usersResponse = await fetch(`${BASE_URL}/api/admin/users`, {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });
        
        if (usersResponse.ok) {
            const usersData = await usersResponse.json();
            console.log('‚úÖ Utilisateurs admin r√©cup√©r√©s avec succ√®s');
            console.log('üë• Nombre d\'utilisateurs:', usersData.users ? usersData.users.length : 'N/A');
        } else {
            const errorData = await usersResponse.json();
            console.log('‚ùå √âchec acc√®s utilisateurs admin:', usersResponse.status, errorData);
        }
        
        // 5. Test d'acc√®s aux logs admin
        console.log('\n5Ô∏è‚É£ Test d\'acc√®s aux logs admin...');
        const logsResponse = await fetch(`${BASE_URL}/api/admin/logs?limit=5`, {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });
        
        if (logsResponse.ok) {
            const logsData = await logsResponse.json();
            console.log('‚úÖ Logs admin r√©cup√©r√©s avec succ√®s');
            console.log('üìã Nombre de logs:', logsData.logs ? logsData.logs.length : 'N/A');
        } else {
            const errorData = await logsResponse.json();
            console.log('‚ùå √âchec acc√®s logs admin:', logsResponse.status, errorData);
        }
        
        console.log('\nüéâ Tests termin√©s !');
        
    } catch (error) {
        console.error('‚ùå Erreur lors des tests:', error.message);
    }
}

// Lancer les tests
testAdminAuth();
